# AUTOGENERATED! DO NOT EDIT! File to edit: 02_questions.ipynb (unless otherwise specified).

__all__ = ['multi_input', 'clear_screen', 'enumerator', 'dprint', 'Essentials', 'FiveMinuteJournal', 'work',
           'estd_time', 'distractions']

# Cell
import sys
from os import system, name
from typing import List

# Cell
def multi_input():
    try:
        while True:
            data=input()
            if not data: break
            yield data
    except KeyboardInterrupt:
        return

#use list(multi_input)

def clear_screen():

    # for windows
    if name == 'nt':
        _ = system('cls')

    # for mac and linux(here, os.name is 'posix')
    else:
        _ = system('clear')

def enumerator(sentences: List[str], start=1):
    '''
    This function prints the output of buit-in enumerate function,
    but in fortran style instead of standard C style.
    '''
    for index, item in enumerate(sentences, start):
        print(f'[{index}] {item.capitalize()}')

def dprint(s: str) -> str:
    from textwrap import dedent
    return print(dedent(s))

# Cell
class Essentials():

    @staticmethod
    def __intro():
        return ("""
                Fill this up to hopeless fuck !!
                Take care of the following instructions, don't screw this up !
                Time in 24hr format. Eg: '1500' for 03:00 PM
                Duration in <Number><identifier>. Eg: '35m', '5h', '4d'
                \n""")

    @staticmethod
    def morning():
        dprint(Essentials.__intro())

        slpt_at = input("When did you sleep ?\n")
        woke_at = input("When did you wake up ?\n")

        dprint("""
               When did you take your meals and for how long ?
               Include the timepass you did after eating.
               Eg:
               0730
               35m
               1600
               1h
               """)
        meals = list(multi_input())

        clear_screen()
        return locals()

    @staticmethod
    def evening():
        dprint(Essentials.__intro())
        dprint("""
               When did you take your meals and for how long ?
               Include the timepass you did after eating.
               Eg:
               0730
               35m
               1600
               1h""")
        meals = list(multi_input())
        dprint("""
               If and when did you meditate and for how long ?
               Press Enter if you didn't meditate. You can add an entry
               if you are going to meditate right now, but add it only
               after the session is over.
               Eg:
               0300
               10m
               """)
        meditate = list(multi_input())
        # add if required: mditate.append(input("On a scale of 1-10 . . .  \n"))
        meditate_notes = input("Enter any additional notes\n")
        dprint("""
               If and when did you exercise and for how long ?
               Press Enter if you didn't.
               Also enter the total number of reps for legs, core and upper respectively.
               Eg:
               0300
               10m
               0
               0
               2
               """)
        exercise = list(multi_input())
        exercise_notes = input("Enter any additional notes\n")
        clear_screen()
        return locals()


# Cell
class FiveMinuteJournal():

    @staticmethod
    def __intro():
        return ("""
                5 Minute Journal
                  \u2022 Take time to connect with the feeling behind your gratitude.
                  \u2022 Be specific
                  \u2022 Try to write these answers somewhere as soon as you wake up.\
                  You can enter those answers here when you are on your computer.
                \n""")

    @staticmethod
    def morning():
        dprint(FiveMinuteJournal.__intro())
        print('I am grateful for . . . \n')
        grateful_for = list(multi_input())
        print('What would make today great? \n')
        three_actions = list(multi_input())
        print('Daily affirmations. I am . . . \n')
        affirmations = list(multi_input())
        return locals()

    @staticmethod
    def evening():
        dprint(FiveMinuteJournal.__intro())
        print('3 amazing things that happened today... \n')
        amazing = list(multi_input())
        print('How could I have made today better? \n')
        today_better = list(multi_input())
        return locals()

# Cell
def work():
    print("Lets get to tasks")
    print("Following is the list of distractions")
    enumerator(distractions)
    print("Do you want to take on any of them today as tasks?")
    print("\nPress enter if none.\n")
    task_list = [distractions[index] for index in
                  [int(i) for i in multi_input()]]
    print('Any other tasks you would like to add?')
    task_list += list(multi_input())
    return task_list

# Cell
def estd_time():
    return input("How much time do you think this would take ?\n")

# Cell
distractions = ['uasnuh','onk','aonusnuh']


# Cell
