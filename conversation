how do start... what do I focus on... OK. let's see. My journalling app.... I have told so many people about it: mama, ashwin, mayank, aniket. I don't know if its good or not. 
Ok... what to do now ? ?
Lets design the output photo... It should have:
    Distraction list
    Today's TODO
    Quote
    Graph about meditation, exercise, sleep and food.
        Meditation: {x: day, y: min_meditated}
        Exercise: Use a bar graph in which the bar is multicolored. Each colour                    representing areas  Legs, Back, Chest,...
        Sleep: Colour code the bars which are utilized for sleeping(optional: meditating, exercise,... if it does not look too much congested)

TEXTURE
Also, make the line ending round.

I want to make a class which filters the attributes based on their types.
Puts them into respective lists 
Then change their repr (or type); input and output.
So that the code is more readable while viewing yaml file.
The subclass would have two _______. One for taking in and other for giving out


--Making a task list / Reading the database--------------
task_list = --list of tasks--
There will a function or class which looks on today's entry.
And sees if there is any scheduled task from previous dates, creates a task list from previous day's distraction list. 
#Case 1: same day evening task (default = today)
The method, goes to the morning of same date and
    1. Set line of date = 3
 
class Database(object):
    tasks = []

class Database(object):
    tasks = []
    2. x is no of characters from margin, y is line no 
    3. find and save the date_line_no of next date = 40
    4. our playground is now [0, 37] lines
    5. for 0 <= x <= 4 and 0 <= y <= 37 search for 'Tasks'
    6. Repeat 1 for line at 'Tasks'
    7. Repeat 3 = 40
    8. Repeat 4 [0,17]
    9. Repeat 5 - 0<=x<=1, 0<=y<=17 make a dict of line_number:task_number
    10. for each line_number in 0,17,
        day.completed : [3,0 - 7,0]    <---- position in rel. x,y
        task_string : [13,0 - EOL]
        day.day : [8,1]
        estd_time : . . .
        


--Writing on the database------------
# Case 1.1 First time task, only morning input taken.
    In this case, I only have estd_time and notes.
    But how to verify that this is the case ?
# Case 1.2
    First time taks, evening input also taken.
# Case 2 Task not completed and scheduled for a particular date.
When scheduling for the next date, write
    Task string, previous date, 
    
    
DB management should be a part of Task or not ?

ok. what is the problmen I am facing ?
I want to combine, essentials, mj and a list(Tasks) into one package and store it in the db by date.
I have made a Day class. How and when will it be populated ?
It should be populated right after the questions are asked.
Day object should have details of a tasks on that particular day only. 
This should be handled by Day or Task ?

Day class should:
call essentials, mj and tasks. 
    Structure of Day class:

File[string(datetime.date)] -----> Day object.  --  Task class
  |                                            ||    |
Referenced by                                  ||  Referenced by
date strings                                   ||   Task strings     Eg: "B1"
  |             +----Essentials                ||    |
  |             |----5 minute journal  |-"B1"  ||    +      +--->Day = 1
  +-->today-1---|----Task('A1')        |       ||    |------|--->Estd_time = 1h
  |             |----Task('B1')+-------|       ||    |      |--->Effort_Satis = 7/10
  |             +----Task('C1')        |-Day=1 ||    |        .         .
  |                                            ||    |        .         .
  |             +----Essentials                ||    |      +--->Next_date = today()
  |             |----5 minute journal  |-"B1"  ||    |
  +-->today-----|----Task('B1')+-------|       ||    |      +--->Day = 2
  |             |----Task('A2')        |-Day=2 ||    |------|--->Next_date = today()+1
  |             +----Task('B2')                ||    |      +--->Prev_date = today()
  |                                            ||    |
  |             |----                          ||    |      +--->Day = 3
  |             |----                  |-"B1"  ||    |------|--->Next_date = [scheduled]
  +-->today+1---|----Task('B1')+-------|       ||    |      ++-->Prev_date = today()
  |             |----                  |-Day=3 ||    |
  |             |----                          ||    |
  |                                            ||    |
  |                                            ||    +

    
Lets start. 
Today starts. There is no previous tasks or anything. Hence there is no entry.
KeyError is catched in the except clause. 

The function should ask the essentials and the morning 5mj questions.

Lets split essentials function into a class with two functions.
    One will be asked in the morning --> Sleep, Food; there will be an option for ex & md.
    Others in the evening --> Food(rest of it), ex, md.

Next comes the morning 5MJ questions. Which are:
        I am grateful for; What would make today great; Daily affirmations "I am ..."

Next, a list of distractions are to be shown.
    A distraction journal class should be created first. 
        It should be separate database.
        Save the date and time when a distraction was written.
        Option to convert distractions into reminders.
            When should the reminder be shown ? Ans: During the distraction mode, at the right side, when the date is approaching. 
        Option to save important dates. (Create a separate note on evernote for this)
    
    What would be the structure of the database. 
    
    What should the distraction class look like if, its just an array of arrays which are pickled.
    It should return a list of strings. with options of included date and hidden dists.
    It should be able to take strings and append it with a timestamp in the pickle.
                            OR
    The class has attributes. And then that class is shelved. But shelving means a single instance is to be saved. That's OK. But retrieving can be of the entire shelve using a for loop. So,
    It could return a list of strings. with options of included date and hidden dists.

Now a list of distractions is shown. 
User is now to be asked if any of those are to be converted into tasks.

Before that, lets make sure that the previous code is working well, also reorganise everything and delete unneccessary stuff.

Task class seems fine, lets check out Day class. They all work.
Now lets check distractions.It works too. But I'm not very sure about the timestamp part. The difference is just in nanoseconds. Using the pickle approach.
    What methods do I need ?
    Distraction(str1) --> This should make a new distraction object with usual properties.
    Distraction.save() --> This should save the distraction object created as array in pillow
    Distraction.view() --> This should display all the strings in the pillow.
    

































    
    
    
